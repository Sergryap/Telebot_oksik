import telebot.async_telebot as tb_async
from telebot.async_telebot import types
from password import token
import asyncio
import re
import time
import random
from .photos import photos


class TgAgent:

	bot = tb_async.AsyncTeleBot(f'{token}')
	"""
	–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–æ—Ç–∞
	"""

	COMMAND = f"""
	‚úîÔ∏è –ü–æ–º–æ—á—å –∑–∞–ø–∏—Å–∞—Ç—åc—è - "z"
	‚úîÔ∏èÔ∏è –°–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–µ–Ω–∞–º - "p"
	‚úîÔ∏èÔ∏è –ü–æ–º–æ—á—å –Ω–∞–π—Ç–∏ –Ω–∞—Å - "h"
	‚úîÔ∏èÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã - "ex"
	‚úîÔ∏èÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π - "ad"
	‚úîÔ∏èÔ∏è –ù–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞ - "start"
	"""

	VERIFY_FUNC = {
		'verify_address': 'send_address',
		'verify_entry': 'send_link_entry',
		'verify_price': 'send_price',
		'verify_contact_admin': 'send_contact_admin',
		'verify_thank_you': 'send_bay_bay',
		'verify_our_site': 'send_site',
		'verify_work_example': 'send_work_example',
	}

	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	btn1 = types.KeyboardButton("Start")
	btn2 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
	btn3 = types.KeyboardButton("–ê–¥—Ä–µ—Å")
	btn4 = types.KeyboardButton("Price")
	btn5 = types.KeyboardButton("–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã")
	btn6 = types.KeyboardButton("–ù–∞—à —Å–∞–π—Ç")
	markup.add(btn1, btn2, btn3, btn4, btn5, btn6)

	def __init__(self, context):
		self.username = context.get('from_user').get('username', 'Anonymous')
		self.first_name = context.get('from_user').get('first_name', self.username)
		self.chat_id = context.get('chat_id')
		self.msg = context.get('text', ' ')
		self.msg_previous = context.get('text', ' ')
		self.users_admin = [1642719191]  # –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã

	async def send_message_to_admins(self):
		for user in self.users_admin:
			await self.bot.send_message(user, f'–°–æ–æ–±—â–µ–Ω–∏–µ:\n "{self.msg}"\n –æ—Ç @{self.username}')

	async def handler_msg(self):
		"""–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
		if await self.verify_hello():
			await self.send_message_to_admins()
			return await self.send_hello()
		for verify, func in self.VERIFY_FUNC.items():
			if await eval(f'self.{verify}()'):
				await self.send_message_to_admins()
				return await eval(f'self.{func}()')
		await self.clarification()
		await self.send_message_to_admins()

	async def verify_hello(self):
		"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
		pattern = re.compile(r'\b(?:–ø—Ä–∏–≤–µ?—Ç|–∑–¥—Ä–∞–≤?—Å—Ç–≤?—É–π|–¥–æ–±—Ä—ã–π|–¥–æ–±—Ä–æ–≥–æ\s*–≤—Ä–µ–º–µ–Ω–∏|—Ä–∞–¥[–∞?]\s*–≤–∏–¥–µ—Ç—å|start|help)\w*')
		return bool(pattern.findall(self.msg))

	async def verify_only_hello(self):
		"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
		verify_all = bool(
			await self.verify_entry() or
			await self.verify_price() or
			await self.verify_contact_admin() or
			await self.verify_address() or
			await self.verify_our_site()
		)
		return bool(await self.verify_hello() and not verify_all)

	async def verify_entry(self):
		"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –æ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É"""
		pattern = re.compile(r'\b(?:–∑–∞–ø–∏—Å|–æ–∫–æ—à|–æ–∫–Ω[–∞–æ]|—Å–≤–æ–±–æ–¥|—Ö–æ—á—É\s*–Ω–∞—Ä[–∞–æ]—Å—Ç–∏—Ç—å)\w*')
		return bool(pattern.findall(self.msg) or self.msg == 'z')

	async def verify_price(self):
		"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø—Ä–∞–π—Å–∞ –Ω–∞ —É—Å–ª—É–≥–∏"""
		pattern = re.compile(r'\b(?:–ø—Ä–∞–π—Å|—Ü–µ–Ω[–∞—ã]|—Å—Ç–æ–∏—Ç|—Å—Ç–æ–∏–º–æ—Å—Ç|price)\w*')
		return bool(pattern.findall(self.msg) or self.msg == 'p' or self.msg == '—Ä')

	async def verify_contact_admin(self):
		"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—Ä–æ—Å —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
		pattern = re.compile(r'\b(?:–∞–¥–º–∏–Ω|—Ä—É–∫–æ–≤–æ–¥|–¥–∏—Ä–µ–∫—Ç–æ—Ä|–Ω–∞—á–∞–ª—å—Å—Ç–≤|–Ω–∞—á–∞–ª—å–Ω–∏–∫)\w*')
		return bool(pattern.findall(self.msg) or self.msg == 'ad')

	async def verify_address(self):
		pattern = re.compile(r'\b(?:–∞–¥—Ä–µ—Å|–≤–∞—Å\s*–Ω–∞–π—Ç–∏|–Ω–∞–π—Ç–∏\s*–≤–∞—Å|–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å|–¥–æ–±—Ä–∞—Ç—å?—Å—è|–∫–æ–Ω—Ç–∞–∫—Ç—ã|–≥–¥–µ\s*–≤–∞—à\s*–æ—Ñ–∏—Å)\w*')
		return bool(pattern.findall(self.msg) or self.msg == 'h')

	async def verify_work_example(self):
		pattern = re.compile(r'\b(?:–ø—Ä–∏–º–µ—Ä—ã?\s*—Ä–∞–±–æ?—Ç|–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å\s*—Ä–∞–±–æ?—Ç—ã|–≤–∞—à–∏—Ö?\s*—Ä–∞–±–æ?—Ç—ã?|–∫–∞—á–µ—Å—Ç–≤–æ\s*—Ä–∞–±–æ?—Ç|–Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã|—Å–ºo—Ç—Ä–µ—Ç—å –µ—â–µ)\w*')
		return bool(pattern.findall(self.msg) or self.msg == 'ex')

	async def verify_thank_you(self):
		pattern = re.compile(r'\b(?:—Å–ø–∞—Å–∏–±–æ|—Å–ø—Å|–±–ª–∞–≥–æ–¥–∞—Ä|–¥–æ\s*—Å–≤–∏–¥–∞–Ω|–ø–æ–∫–∞)\w*')
		return bool(pattern.findall(self.msg))

	async def verify_our_site(self):
		return bool(self.msg == '–Ω–∞—à —Å–∞–π—Ç' or self.msg == 'site')

	async def clarification(self):
		text = f"""
		{self.first_name}, —è –µ—â–µ –º–æ–ª–æ–¥–æ–π –±–æ—Ç –∏ —Ç–æ–ª—å–∫–æ —É—á—É—Å—å, –ø–æ—ç—Ç–æ–º—É —É—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á—Ç–æ –±—ã –≤—ã—Ö–æ—Ç–µ–ª–∏, –æ—Ç–ø—Ä–∞–≤–∏–≤ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:\n
		{self.COMMAND} 
		"""
		await self.bot.send_message(self.chat_id, text)

	async def send_hello(self):

		def good_time():
			tm = time.ctime()
			pattern = re.compile(r"(\d+):\d+:\d+")
			h = int(pattern.search(tm).group(1))
			h = h + 5 if h < 19 else (h + 5) // 24
			if h < 6:
				return "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"
			elif h < 11:
				return "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
			elif h < 18:
				return "–î–æ–±—Ä—ã–π –¥–µ–Ω—å"
			elif h <= 23:
				return "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"

		d = [
			'\n–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤—ã—à–µ.',
			'\n–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤—ã—à–µ.',
			'\n–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤—ã—à–µ.'
		]

		t = f"""
		–ü–æ–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—ã {'—Å–ø—è—Ç' if good_time() == '–î–æ–±—Ä–æ–π –Ω–æ—á–∏' else '–∑–∞–Ω—è—Ç—ã'} —è –º–æ–≥—É:
		{self.COMMAND}
		"""

		delta = random.choice(d) if await self.verify_only_hello() else ''
		t1 = f"{good_time()}, {self.first_name}!\n–Ø –±–æ—Ç Oksa-studio.\n–ë—É–¥—É —Ä–∞–¥ –Ω–∞—à–µ–º—É –æ–±—â–µ–Ω–∏—é.\n{t}{delta}"
		t2 = f"{good_time()}, {self.first_name}!\n–Ø —á–∞—Ç-–±–æ—Ç Oksa-studio.\n–û—á–µ–Ω—å —Ä–∞–¥ –≤–∏–¥–µ—Ç—å –í–∞—Å —É –Ω–∞—Å.\n{t}{delta}"
		t3 = f"{good_time()}, {self.first_name}!\n–Ø –±–æ—Ç —ç—Ç–æ–≥–æ —á–∞—Ç–∞.\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –í–∞—Å —É –Ω–∞—Å –≤ –≥–æ—Å—Ç—è—Ö.\n{t}{delta}"
		await self.bot.send_message(self.chat_id, random.choice([t1, t2, t3]), reply_markup=self.markup)

	async def send_link_entry(self):
		markup = types.InlineKeyboardMarkup()
		button1 = types.InlineKeyboardButton(text="ON-LINE –ó–ê–ü–ò–°–¨", url='https://dikidi.net/72910')
		markup.add(button1)
		text = f"""
		{self.first_name}, —É–∑–Ω–∞—Ç—å –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, —Å–≤–æ–∏—Ö –∑–∞–ø–∏—Å—è—Ö –∏/–∏–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –º–æ–∂–Ω–æ:\n
		‚úîÔ∏è –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ: <a href="https://dikidi.net/72910">ON-LINE</a>
		‚úîÔ∏è –ü–æ —Ç–µ–ª. +7(919)442-35-36
		‚úîÔ∏è –ß–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: @oksarap (–û–∫—Å–∞–Ω–∞)
		‚úî –î–æ–∂–¥–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞\n
		–ß—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:
		{self.COMMAND}
		"""
		await self.bot.send_message(self.chat_id, text, parse_mode="HTML", reply_markup=markup)

	async def send_price(self):
		markup = types.InlineKeyboardMarkup()
		button1 = types.InlineKeyboardButton(text="–°–ú–û–¢–†–ï–¢–¨ PRICE", url="https://vk.com/uslugi-142029999")
		markup.add(button1)
		text = f"""		
		{self.first_name}, —Ü–µ–Ω—ã –Ω–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–¥–µ—Å—å: Ô∏è<a href="https://vk.com/uslugi-142029999">PRICE</a>\n		
		–ß—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:
		{self.COMMAND}
		"""
		await self.bot.send_message(self.chat_id, text, parse_mode="HTML", reply_markup=markup)

	async def send_contact_admin(self):
		text = f"""
		{self.first_name}, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
		–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏:
		‚úî @oksarap (—á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
		‚úî https://vk.com/id448564047
		‚úî https://vk.com/id9681859
		‚úî Email: oksarap@mail.ru
		‚úî –¢–µ–ª.: +7(919)442-35-36\n
		–ß—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:
		{self.COMMAND}	
		"""
		await self.bot.send_message(self.chat_id, text, reply_markup=self.markup)

	async def send_site(self):
		markup = types.InlineKeyboardMarkup()
		button1 = types.InlineKeyboardButton(text="–ù–ê–® –°–ê–ô–¢", url='https://oksa-studio.ru/')
		markup.add(button1)
		text = f"""
		{self.first_name}, –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–∏ —Ä–µ—Å–Ω–∏—Ü —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:
		https://oksa-studio.ru/
		\n–ß—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ.\n
		{self.COMMAND}
		"""
		await self.bot.send_message(self.chat_id, text, reply_markup=markup)

	async def send_address(self):
		text1 = f"""
		{self.first_name}, –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n
		üìç –≥.–ü–µ—Ä–º—å, —É–ª.–¢—É—Ä–≥–µ–Ω–µ–≤–∞, –¥.23.\n
		"""
		text2 = f"""
		–≠—Ç–æ –º–∞–ª–æ—ç—Ç–∞–∂–Ω–æ–µ –∫–∏—Ä–ø–∏—á–Ω–æ–µ –∑–¥–∞–Ω–∏–µ —Å–ª–µ–≤–∞ –æ—Ç –¢–¶ "–ê–≥–∞—Ç" 
		–í—Ö–æ–¥ —á–µ—Ä–µ–∑ "–ò–¥–µ–∞–ª-–õ–∏–∫", –±–æ–ª—å—à–æ–π —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π —Ç–∞–º–±—É—Ä\n
		–ß—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ.\n
		{self.COMMAND}	
		"""
		await self.bot.send_message(
				self.chat_id,
				'<a href="https://vk.com/photo-195118308_457239030">–í—Ö–æ–¥</a>',
				parse_mode="HTML"
			)
		await self.bot.send_message(
			self.chat_id,
			'<a href="https://vk.com/photo-142029999_457243624">–ù–∞ –∫–∞—Ä—Ç–µ</a>',
			parse_mode="HTML"
		)
		await self.bot.send_message(self.chat_id, text1)
		await self.bot.send_message(self.chat_id, text2, reply_markup=self.markup)

	async def send_bay_bay(self):
		text1 = f"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {self.first_name}. –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!"
		text2 = f"–î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á, {self.first_name}. –ë—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ —Å –í–∞–º–∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è. –ñ–¥—ë–º –≤–∞—Å —Å–Ω–æ–≤–∞!"
		text3 = f"–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ –í–∞–º, {self.first_name}. –ù–∞–¥–µ—é—Å—å –º—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –ñ–¥—ë–º –≤–∞—Å —Å–Ω–æ–≤–∞! –î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á."
		text = random.choice([text1, text2, text3])
		await self.bot.send_message(self.chat_id, text, reply_markup=self.markup)

	async def send_work_example(self):
		text = f"""
		{self.first_name}, –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç –∑–¥–µ—Å—å:
		vk.com/albums-142029999
		–ß—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ.\n
		{self.COMMAND}
		"""
		await self.send_photo()
		await self.bot.send_message(self.chat_id, text, reply_markup=self.markup)

	async def send_photo(self, photo_id=None):
		attachment = photo_id if photo_id else await self.get_photos_example()
		for photo in attachment:
			await self.bot.send_message(
				self.chat_id,
				f'<a href="{photo}">–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã</a>',
				parse_mode="HTML"
			)

	@staticmethod
	async def get_photos_example():
		attachment = []
		for photo in random.sample(photos, 3):
			attachment.append(f"https://vk.com/{photo}")
		return attachment
